/* eslint-disable */
/* prettier-ignore */
// biome-ignore lint: disable
// Generated by elegant-router
// Read more: https://github.com/SkyRoc1/skyroc-router

declare module "@skyroc-router/types" {
  type RouteRecordSingleView = import("vue-router").RouteRecordSingleView;
  type RouteRecordRedirect = import("vue-router").RouteRecordRedirect;
  type RouteComponent = import("vue-router").RouteComponent;

  type Lazy<T> = () => Promise<T>;

  export type RawRouteComponent = RouteComponent | Lazy<RouteComponent>;



  /**
   * route path map
   */
  export type RoutePathMap = {
    "Root": "/";
    "NotFound": "*";
    "About": "/about";
    "AboutDetail": "/about/detail";
    "AboutDetailId": "/about/detail/:id";
    "AboutDetailIdUserId": "/about/detail/:id/:userId";
    "AboutDetailProjectPid": "/about/detail/project/:pid";
    "Home": "/home";
    "Home-[...all]": "/home/[...all]";
    "HomeError": "/home/error";
    "HomeLayout": "/home/layout";
    "HomeLoading": "/home/loading";
    "ProjectPid": "/project/:pid";
    "ProjectPidEditId": "/project/:pid/edit/:id";
  };

  /**
   * route key
   */
  export type RouteKey = keyof RoutePathMap;

  /**
   * route path
   */
  export type RoutePath = RoutePathMap[RouteKey];

  /**
   * root route key
   */
  export type RootRouteKey = 'Root';

  /**
   * not found route key
   */
  export type NotFoundRouteKey = 'NotFound';

  /**
   * builtin route key
   */
  export type BuiltinRouteKey = RootRouteKey | NotFoundRouteKey;

  /**
   * reuse route key
   */
  export type ReuseRouteKey = Extract<
    RouteKey,
  >;

  /**
   * the route file key, which has it's own file
   */
  export type RouteFileKey = Exclude<RouteKey, BuiltinRouteKey | ReuseRouteKey>;

  /**
   * mapped name and path
   */
  type MappedNamePath = {
    [K in RouteKey]: { name: K; path: RoutePathMap[K] };
  }[RouteKey];

  /**
   * auto router single view
   */
  export type AutoRouterSingleView = Omit<RouteRecordSingleView, 'component' | 'name' | 'path'> & {
    component: RouteFileKey;
    layout: RouteLayoutKey;
  } & MappedNamePath;

  /**
   * auto router redirect
   */
  export type AutoRouterRedirect = Omit<RouteRecordRedirect, 'children' | 'name' | 'path'> & MappedNamePath;

  /**
   * auto router route
   */
  export type AutoRouterRoute = AutoRouterSingleView | AutoRouterRedirect;
}
